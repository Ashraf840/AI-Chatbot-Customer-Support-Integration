# Generated by Django 4.2 on 2024-01-25 14:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ChatbotVisitorMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_ip", models.CharField(blank=True, max_length=20, null=True)),
                ("visitors_msg", models.CharField(max_length=255)),
                ("bot_msg", models.CharField(max_length=255)),
                (
                    "created_at",
                    models.DateTimeField(auto_now=True, verbose_name="Created at"),
                ),
            ],
            options={"verbose_name_plural": "Chatbot Visitor Message",},
        ),
        migrations.CreateModel(
            name="ChatSupportUserConnectedChannels",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cso_email",
                    models.CharField(
                        blank=True, max_length=60, null=True, verbose_name="HDO email"
                    ),
                ),
                (
                    "visitor_session_uuid",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
                ("room_slug", models.CharField(max_length=25)),
                ("channel_value", models.CharField(max_length=74)),
            ],
            options={"verbose_name_plural": "HDO-User Channels",},
        ),
        migrations.CreateModel(
            name="ChatSupportUserOnline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cso_email",
                    models.CharField(
                        blank=True, max_length=60, null=True, verbose_name="HDO email"
                    ),
                ),
                (
                    "visitor_session_uuid",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
                ("room_slug", models.CharField(max_length=25)),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="User active"),
                ),
                (
                    "joined_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Joined at"),
                ),
                (
                    "last_update",
                    models.DateTimeField(auto_now=True, verbose_name="Last activity"),
                ),
            ],
            options={"verbose_name_plural": "HDO-User Online",},
        ),
        migrations.CreateModel(
            name="CSOVisitorConvoInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("room_slug", models.CharField(max_length=25)),
                (
                    "cso_email",
                    models.CharField(
                        max_length=60, verbose_name="Help Desk Officer Email"
                    ),
                ),
                (
                    "registered_user_email",
                    models.CharField(
                        blank=True, max_length=60, null=True, verbose_name="User Email"
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(
                        default=False,
                        help_text="HDO marks the issue as resolved, displays boolean values",
                    ),
                ),
                (
                    "is_dismissed",
                    models.BooleanField(
                        default=False,
                        help_text="HDO marks the issue as dismissed, displays boolean values",
                    ),
                ),
                (
                    "is_connected",
                    models.BooleanField(
                        default=False,
                        help_text="The HDO has marked this conversation as resolved if it's displayed 'False'",
                        verbose_name="Is HDO connected?",
                    ),
                ),
                (
                    "issue_by_oid",
                    models.CharField(
                        blank=True,
                        default="6f8b28a3-0e2e-4f06-b3eb-6f7b4e2da5ac",
                        help_text='Remove the default oid later (when the bot will create the issue & add value from "CustomerSupportRequest()" model)',
                        max_length=60,
                        null=True,
                    ),
                ),
                (
                    "is_cancelled",
                    models.BooleanField(
                        default=False,
                        help_text="The user cancelled the chat-conversation, thus the associate msg-req will be removed form the CSR list",
                        verbose_name="Chat cancelled",
                    ),
                ),
                (
                    "is_cleared",
                    models.BooleanField(
                        default=False,
                        help_text="The HDO removed/cleared the associate msg-req from the CSR List, thus the conversation will be marked as cleared",
                        verbose_name="Associate msg-req is removed",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Conversation created at"
                    ),
                ),
            ],
            options={"verbose_name_plural": "HDO Visitor Conversation Information",},
        ),
        migrations.CreateModel(
            name="CSOVisitorMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.CharField(blank=True, max_length=255, null=True)),
                ("user_identity", models.CharField(max_length=25)),
                ("room_slug", models.CharField(max_length=25)),
                (
                    "created_at",
                    models.DateTimeField(auto_now=True, verbose_name="Created at"),
                ),
            ],
            options={"verbose_name_plural": "HDO Visitor Messages",},
        ),
        migrations.CreateModel(
            name="CustomerSupportRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_ip", models.CharField(blank=True, max_length=20, null=True)),
                ("room_slug", models.SlugField(unique=True)),
                (
                    "visitor_session_uuid",
                    models.CharField(blank=True, max_length=36, null=True),
                ),
                (
                    "registered_user_email",
                    models.CharField(
                        blank=True, max_length=60, null=True, verbose_name="User Email"
                    ),
                ),
                (
                    "registered_user_email_normalized",
                    models.CharField(
                        blank=True,
                        max_length=60,
                        null=True,
                        verbose_name="User Email (normalized)",
                    ),
                ),
                (
                    "assigned_cso",
                    models.CharField(
                        blank=True,
                        max_length=60,
                        null=True,
                        verbose_name="Assigned HDO",
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(
                        default=False,
                        help_text="Marked as resolved if the HDO marked the coordinating convoInfo as resolved",
                    ),
                ),
                (
                    "is_dismissed",
                    models.BooleanField(
                        default=False,
                        help_text="Mark as dismissed if the HDO marked the coordinating convoInfo as dismissed",
                        verbose_name="Dismissed",
                    ),
                ),
                (
                    "is_detached",
                    models.BooleanField(
                        default=False,
                        help_text="Mark as detached if the HDO mark the 'CustomerSupportRequest' as resolved or dismissed",
                        verbose_name="Detached",
                    ),
                ),
                (
                    "issue_by_oid",
                    models.CharField(
                        blank=True,
                        default="6f8b28a3-0e2e-4f06-b3eb-6f7b4e2da5ac",
                        help_text="Remove the default oid later (when the bot will create the issue & get the response)",
                        max_length=60,
                        null=True,
                    ),
                ),
                (
                    "chatbot_socket_id",
                    models.CharField(blank=True, max_length=60, null=True),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now=True, verbose_name="Created at"),
                ),
            ],
            options={"verbose_name_plural": "HDO Support Request",},
        ),
        migrations.CreateModel(
            name="UserChatbotSocket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_email", models.CharField(max_length=60)),
                (
                    "chatbot_socket_id",
                    models.CharField(
                        max_length=60, verbose_name="Chatbot Socket Unique ID"
                    ),
                ),
                (
                    "registered_user_session_uuid",
                    models.CharField(
                        max_length=60, verbose_name="Registered User Session UUID"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        verbose_name="Chatbot Socket Record Created At",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RemarkResolution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("remarks", models.TextField(blank=True, null=True)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        verbose_name="Created remarks after providing solution",
                    ),
                ),
                (
                    "cso_user_convo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="home.csovisitorconvoinfo",
                        verbose_name="HDO-User Conversation",
                    ),
                ),
            ],
        ),
    ]
