# Generated by Django 4.1.7 on 2023-03-19 12:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChatbotVisitorMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_ip', models.CharField(blank=True, max_length=20, null=True)),
                ('visitors_msg', models.CharField(max_length=255)),
                ('bot_msg', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name_plural': 'Chatbot Visitor Message',
            },
        ),
        migrations.CreateModel(
            name='ChatSupportUserConnectedChannels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cso_email', models.CharField(blank=True, max_length=60, null=True)),
                ('visitor_session_uuid', models.CharField(blank=True, max_length=36, null=True)),
                ('room_slug', models.CharField(max_length=25)),
                ('channel_value', models.CharField(max_length=74)),
            ],
            options={
                'verbose_name_plural': 'Customer Support (Chat) CSO-Visitor Channels',
            },
        ),
        migrations.CreateModel(
            name='ChatSupportUserOnline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cso_email', models.CharField(blank=True, max_length=60, null=True)),
                ('visitor_session_uuid', models.CharField(blank=True, max_length=36, null=True)),
                ('room_slug', models.CharField(max_length=25)),
                ('is_active', models.BooleanField(default=True, verbose_name='User active')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='Joined at')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Last activity')),
            ],
            options={
                'verbose_name_plural': 'Customer Support (Chat) CSO-Visitor Chat Online',
            },
        ),
        migrations.CreateModel(
            name='CSOVisitorConvoInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_slug', models.CharField(max_length=25)),
                ('cso_email', models.CharField(max_length=60, verbose_name='Customer Support Officer Email')),
                ('registered_user_email', models.CharField(blank=True, max_length=60, null=True, verbose_name='User Email')),
                ('is_resolved', models.BooleanField(default=False)),
                ('is_connected', models.BooleanField(default=False, help_text="The CSO has marked this conversation as resolved if it's displayed 'False'", verbose_name='Is CSO connected?')),
                ('issue_by_oid', models.CharField(blank=True, default='6f8b28a3-0e2e-4f06-b3eb-6f7b4e2da5ac', help_text='Remove the default oid later (when the bot will create the issue & add value from "CustomerSupportRequest()" model)', max_length=60, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Conversation created at')),
            ],
            options={
                'verbose_name_plural': 'CSO Visitor Conversation Information',
            },
        ),
        migrations.CreateModel(
            name='CSOVisitorMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('user_identity', models.CharField(max_length=25)),
                ('room_slug', models.CharField(max_length=25)),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name_plural': 'CSO Visitor Messages',
            },
        ),
        migrations.CreateModel(
            name='CustomerSupportRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_ip', models.CharField(blank=True, max_length=20, null=True)),
                ('room_slug', models.SlugField(unique=True)),
                ('visitor_session_uuid', models.CharField(blank=True, max_length=36, null=True)),
                ('registered_user_email_normalized', models.CharField(blank=True, max_length=60, null=True, verbose_name='User Email (normalized)')),
                ('assigned_cso', models.CharField(blank=True, max_length=60, null=True)),
                ('is_resolved', models.BooleanField(default=False, help_text='Marked as resolved if the CSO marked the coordinating convoInfo as resolved')),
                ('issue_by_oid', models.CharField(blank=True, default='6f8b28a3-0e2e-4f06-b3eb-6f7b4e2da5ac', help_text='Remove the default oid later (when the bot will create the issue & get the response)', max_length=60, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name_plural': 'Customer Support Request',
            },
        ),
        migrations.CreateModel(
            name='UserChatbotSocket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.CharField(max_length=60)),
                ('chatbot_socket_id', models.CharField(max_length=60, verbose_name='Chatbot Socket Unique ID')),
                ('registered_user_session_uuid', models.CharField(max_length=60, verbose_name='Registered User Session UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
        ),
    ]
