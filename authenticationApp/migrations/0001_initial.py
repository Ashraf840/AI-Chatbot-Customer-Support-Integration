# Generated by Django 4.2 on 2024-01-25 14:02

import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User_Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_email",
                    models.EmailField(
                        blank=True, max_length=60, null=True, verbose_name="User Email"
                    ),
                ),
                (
                    "user_address",
                    models.TextField(
                        blank=True, null=True, verbose_name="User Address"
                    ),
                ),
                (
                    "user_name_bn",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ইউজার নাম (বাংলা)",
                    ),
                ),
                (
                    "user_father_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Father Name",
                    ),
                ),
                (
                    "user_mother_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Mother Name",
                    ),
                ),
                (
                    "user_NID_no",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="NID no."
                    ),
                ),
                (
                    "user_organization",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Organization",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "district",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="District"
                    ),
                ),
                (
                    "division",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Division"
                    ),
                ),
            ],
            options={"verbose_name_plural": "User Profile",},
        ),
        migrations.CreateModel(
            name="User_signin_token_tms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_email",
                    models.EmailField(
                        blank=True, max_length=60, null=True, verbose_name="User Email"
                    ),
                ),
                (
                    "user_id",
                    models.CharField(
                        blank=True,
                        help_text="TMS 'user_id' is the 'uesrname' of the COS",
                        max_length=200,
                        null=True,
                        verbose_name="User id (TMS)",
                    ),
                ),
                (
                    "user_token",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        null=True,
                        verbose_name="Access Token",
                    ),
                ),
                (
                    "token_type",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Token Type"
                    ),
                ),
            ],
            options={"verbose_name_plural": "User Signin Token (TMS)",},
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "email",
                    models.EmailField(max_length=60, unique=True, verbose_name="Email"),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists!"
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="First Name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Last Name"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        max_length=6,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Primary Contact"
                    ),
                ),
                (
                    "profile_pic",
                    models.ImageField(
                        blank=True,
                        default="profilePicture/default_avatar.png",
                        upload_to="profilePicture",
                    ),
                ),
                (
                    "initial_password",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("is_first_login", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateField(auto_now_add=True, verbose_name="Date Joined"),
                ),
                (
                    "last_login",
                    models.DateTimeField(auto_now_add=True, verbose_name="Last Login"),
                ),
                (
                    "last_update",
                    models.DateTimeField(auto_now=True, verbose_name="Last Update"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_cso", models.BooleanField(default=False, verbose_name="is_hdo")),
                ("is_user", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "User (Staff, HDO, Admin, User, Superuser)",
            },
        ),
    ]
